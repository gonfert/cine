<?php

namespace Cine\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PeliculaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PeliculaRepository extends EntityRepository
{
    /**
     * Encuentra una pelicula con sus comentarios
     *
     * @param  int  $id
     * @return Pelicula
     */
    public function findConComentarios($id)
    {
        return $this
            ->createQueryBuilder('p')
            ->addSelect('c')
            ->leftJoin('p.comentarios', 'c')
            ->where('p.id = :id')
            ->orderBy('c.fecha', 'ASC')
            ->setParameter('id', $id)
            ->getQuery()
            ->getOneOrNullResult()
            ;
    }

    /**
     * Encuentra peliculas con determinadas etiquetas
     *
     * @param string[] $etiquetas
     * @return Pelicula[]
     */
    public function findTeniendoEtiquetas(array $etiquetas)
    {
        return $queryBuilder = $this
            ->createQueryBuilder('p')
            ->addSelect('e.nombre')
            ->addSelect('COUNT(c.id)')
            ->join('p.etiquetas', 'e')
            ->leftJoin('p.comentarios', 'c')
            ->where('e.nombre IN (:etiquetas)')
            ->groupBy('p.id')
            ->having('COUNT(e.nombre) >= :numEtiquetas')
            ->setParameter('etiquetas', $etiquetas)
            ->setParameter('numEtiquetas', count($etiquetas))
            ->getQuery()
            ->getResult()
            ;
    }

    /**
     * Devuelve las peliculas con el numero de sus comentarios
     *
     * @return array
     */
    public function findConNumComentarios()
    {
        return $this
            ->createQueryBuilder('p')
            ->leftJoin('p.comentarios', 'c')
            ->addSelect('COUNT(c.id)')
            ->groupBy('p.id')
            ->getQuery()
            ->getResult()
            ;
    }    
}
